#lang planet neil/sicp

(define (make-tree entry left right)
  (list entry left right))

(define (entry tree)
  (car tree))

(define (left-branch tree)
  (cadr tree))

(define (right-branch tree)
  (caddr tree))

(define (lookup given-key tree-of-records)
  (if (null? tree-of-records)
      #f
      (let ((entry-key (key (entry tree-of-records))))
        (cond ((= given-key entry-key)
               (entry tree-of-records))
              ((> given-key entry-key)
               (lookup given-key (right-branch tree-of-records)))
              ((< given-key entry-key)
               (lookup given-key (left-branch tree-of-records)))))))

